---
interface NavLink {
    href: string;
    text: string;
}

interface Props {
    navLinks: NavLink[];
}

const { navLinks } = Astro.props;
---

<nav>
    <div class="nav-container">
        <div class="logo">
            <a href="/">
                <img
                    src="/img/icons/ec.png"
                    alt="Logo"
                    width="50"
                    height="50"
                />
            </a>
        </div>
        <div class="nav-right">
            <button class="hamburger" aria-label="Menu">
                <span></span>
                <span></span>
                <span></span>
            </button>
        </div>
        <div class="nav-menu">
            <ul class="nav-links">
                {
                    navLinks.map((link) => (
                        <li>
                            <a href={link.href}>{link.text}</a>
                        </li>
                    ))
                }
            </ul>
        </div>
    </div>
</nav>

<style lang="scss">
    nav {
        background-color: rgba(15, 23, 42, 0.9);
        position: sticky;
        top: 0;
        left: 0;
        width: 100%;
        padding: 1rem 0;
        backdrop-filter: blur(10px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        transition: background-color 0.3s ease;

        @media (width <= 768px) {
            position: fixed;
        }
    }

    .nav-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem;
        position: relative;
    }

    .nav-right {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .logo {
        a {
            font-size: 1.5rem;
            font-weight: bold;
            text-decoration: none;
            color: #f1f5f9;
            transition: color 0.3s ease;

            &:hover {
                color: #38bdf8;
            }

            img {
                object-fit: cover;
                border-radius: 50%;

                &:hover {
                    transform: scale(1.1);
                    transition: transform 0.3s ease;
                    box-shadow: 0 2px 4px rgba(255, 255, 255, 0.2);
                }
            }
        }
    }

    .hamburger {
        display: none;
        flex-direction: column;
        justify-content: space-around;
        width: 2rem;
        height: 2rem;
        background: transparent;
        border: none;
        cursor: pointer;
        padding: 0;
        z-index: 1100;

        span {
            width: 2rem;
            height: 0.25rem;
            background: #38bdf8;
            border-radius: 10px;
            transition: all 0.3s ease-in-out;
            position: relative;
            transform-origin: 1px;
        }
    }

    .nav-menu {
        @media (max-width: 768px) {
            position: fixed;
            top: 0;
            right: -100%;
            width: 100%;
            max-width: 300px;
            height: 100vh;
            background: rgba(15, 23, 42, 0.9);
            backdrop-filter: blur(10px);
            padding: 6rem 2rem 2rem;
            transition: right 0.3s ease-in-out;
            box-shadow: -5px 0 15px rgba(0, 0, 0, 0.3);

            &.active {
                right: 0;
            }
        }
    }

    .nav-links {
        list-style: none;
        display: flex;
        gap: 2rem;
        margin: 0;
        padding: 0;
        li {
            a {
                text-decoration: none;
                color: #f1f5f9;
                transition: color 0.3s ease;
                position: relative;

                &::after {
                    content: "";
                    position: absolute;
                    bottom: -4px;
                    left: 0;
                    width: 0;
                    height: 2px;
                    background: #38bdf8;
                    transition: width 0.3s ease;
                }

                &:hover {
                    color: #38bdf8;

                    &::after {
                        width: 100%;
                    }
                }
            }
        }
    }

    @media (max-width: 768px) {
        .hamburger {
            display: flex;

            &.active {
                span {
                    &:first-child {
                        transform: rotate(45deg);
                    }
                    &:nth-child(2) {
                        opacity: 0;
                    }
                    &:last-child {
                        transform: rotate(-45deg);
                    }
                }
            }
        }

        .nav-links {
            flex-direction: column;
            align-items: center;
            gap: 2rem;

            li {
                a {
                    font-size: 1.2rem;
                }
            }
        }
    }
</style>

<script>
    const hamburger = document.querySelector(".hamburger");
    const navMenu = document.querySelector(".nav-menu");
    const navLinks = document.querySelectorAll(".nav-links a");

    function toggleMenu() {
        hamburger?.classList.toggle("active");
        navMenu?.classList.toggle("active");
        document.body.style.overflow = navMenu?.classList.contains("active")
            ? "hidden"
            : "";
    }

    hamburger?.addEventListener("click", toggleMenu);

    navLinks.forEach((link) => {
        link.addEventListener("click", () => {
            hamburger?.classList.remove("active");
            navMenu?.classList.remove("active");
            document.body.style.overflow = "";
        });
    });

    document.addEventListener("click", (e) => {
        const target = e.target as HTMLElement;
        if (
            navMenu?.classList.contains("active") &&
            !target.closest(".nav-menu") &&
            !target.closest(".hamburger")
        ) {
            hamburger?.classList.remove("active");
            navMenu?.classList.remove("active");
            document.body.style.overflow = "";
        }
    });

    //   hamburger?.addEventListener('click', () => {
    //     navMenu?.classList.toggle('active');
    //     hamburger?.classList.toggle('active');
    //   });

    //   navLinks.forEach((link) => {
    //     link.addEventListener('click', () => {
    //       navMenu?.classList.remove('active');
    //       hamburger?.classList.remove('active');
    //     });
    //   })
</script>
